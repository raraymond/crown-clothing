{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fecthCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections'); // collectionRef\n  // \t.get()\n  // \t.then((snapshot) => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // \t})\n  // \t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fecthCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/ryan/Library/Mobile Documents/com~apple~CloudDocs/development/Complete React Developer/02_the big one/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fecthCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB,CAHyC,CAKzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMX,SAAS,CACdK,eAAe,CAACO,uBADF,EAEdN,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure,\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fecthCollectionsAsync () {\n\tyield console.log('I am fired');\n\n\tconst collectionRef = firestore.collection('collections');\n\n\t// collectionRef\n\t// \t.get()\n\t// \t.then((snapshot) => {\n\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t// \t})\n\t// \t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart () {\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfecthCollectionsAsync\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}