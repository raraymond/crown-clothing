{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const FetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ryan/Library/Mobile Documents/com~apple~CloudDocs/development/Complete React Developer/02_the big one/crown-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","FetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAGJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD,CADsC,CAEtC;;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAKA,GATD;AAUA,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n\ttype : ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const FetchCollectionsStartAsync = () => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef.get().then((snapshot) => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\t// updateCollections(collectionsMap);\n\t\t\tthis.setState({ loading: false });\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}