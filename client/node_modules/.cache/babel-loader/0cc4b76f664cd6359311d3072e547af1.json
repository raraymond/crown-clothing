{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp() {}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/ryan/Library/Mobile Documents/com~apple~CloudDocs/development/Complete React Developer/02_the big one/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signOut","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_OUT_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutFailure,\n\tsignOutSuccess,\n\tsignUpSuccess,\n\tsignUpFailure,\n} from './user.actions';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapShotFromUserAuth (userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signOut () {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* signUp ({ payload: { email, password, displayName } }) {\n\ttry {\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\t\tyield put(signUpSuccess({ user, additionalData: { displayName } }));\n\t} catch (error) {\n\t\tyield put(signUpFailure(error));\n\t}\n}\n\nexport function* signInAfterSignUp () {}\n\nexport function* signInWithGoogle () {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail ({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* isUserAuthenticated () {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapShotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart () {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart () {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession () {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart () {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart () {\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess () {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas () {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(isUserAuthenticated),\n\t\tcall(onSignOutStart),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}