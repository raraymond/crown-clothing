{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport function* fecthCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fecthCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/ryan/Library/Mobile Documents/com~apple~CloudDocs/development/Complete React Developer/02_the big one/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fecthCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,UAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACA,GALF,EAMEG,KANF,CAMSC,KAAD,IAAWH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN3B;AAOA;AAED,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMnB,SAAS,CACdG,eAAe,CAACiB,uBADF,EAEdhB,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fecthCollectionsAsync () {\n\tyield console.log('I am fired');\n\n\tconst collectionRef = firestore.collection('collections');\n\n\tcollectionRef\n\t\t.get()\n\t\t.then((snapshot) => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t})\n\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart () {\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfecthCollectionsAsync\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}