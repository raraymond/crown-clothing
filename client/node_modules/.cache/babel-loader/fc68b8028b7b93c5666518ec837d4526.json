{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {} catch (error) {}\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/ryan/Library/Mobile Documents/com~apple~CloudDocs/development/Complete React Developer/02_the big one/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signOut","signUp","payload","email","password","displayName","signInWithGoogle","user","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutFailure,\n\tsignOutSuccess,\n} from './user.actions';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapShotFromUserAuth (userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapShot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signOut () {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* signUp ({ payload: { email, password, displayName } }) {\n\ttry {\n\t} catch (error) {}\n}\n\nexport function* signInWithGoogle () {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail ({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapShotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* isUserAuthenticated () {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapShotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart () {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart () {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession () {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart () {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart () {\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas () {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(isUserAuthenticated),\n\t\tcall(onSignOutStart),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}